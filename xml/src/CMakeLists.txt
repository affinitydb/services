cmake_minimum_required(VERSION 2.8)
if(NOT CMAKE_BUILD_TYPE)
set(CMAKE_BUILD_TYPE "Debug")
endif(NOT CMAKE_BUILD_TYPE)

message ("XML parsing/rendering service for affinity...")
message ("System: ${CMAKE_SYSTEM}")
message ("CPU type: ${CMAKE_SYSTEM_PROCESSOR}")
message ("CMAKE_BUILD_TYPE: " ${CMAKE_BUILD_TYPE} )
message ("Project dir: " ${PROJECT_SOURCE_DIR})

SET(MVSTORE_PRJ "${PROJECT_SOURCE_DIR}/../../kernel")
INCLUDE_DIRECTORIES("./" "${MVSTORE_PRJ}/include" "../include")
SET(LIBRARY_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/lib")
SET(EXECUTABLE_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/bin")

IF(CMAKE_SYSTEM_NAME MATCHES Windows)
    ADD_DEFINITIONS(-DWIN32)
    ADD_DEFINITIONS(-D_WINDOWS)
    ADD_DEFINITIONS(-D_USRDLL)
    ADD_DEFINITIONS(-DMVSTORE_EXPORTS)
    ADD_DEFINITIONS(-DMVCORE_PROJECT)
    ADD_DEFINITIONS(-D_WINDLL)
    ADD_DEFINITIONS(-D_MBCS)
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE)
    ADD_DEFINITIONS(-D_CRT_NONSTDC_NO_DEPRECATE)
    SET(CMAKE_CXX_FLAGS "/Gm /Zi /EHsc /GS /W3 /nologo /c /Gd /TP ")
ENDIF(CMAKE_SYSTEM_NAME MATCHES Windows)

IF(CMAKE_SYSTEM_NAME MATCHES Linux)
    ADD_DEFINITIONS(-D_LINUX)
    ADD_DEFINITIONS(-DPOSIX)
IF(${CPUTYPE} MATCHES "x86")
    ADD_DEFINITIONS(-DIA32)
IF(CMAKE_BUILD_TYPE MATCHES Debug)
    ADD_DEFINITIONS(-DDEBUG)
    ADD_DEFINITIONS(-D_DEBUG)
IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
    SET(CMAKE_CXX_FLAGS " -g -O0 -march=nocona -m128bit-long-double -m64 -pthread -fexceptions -fno-strict-aliasing -W -Wall -Wno-parentheses -Wno-unused-parameter -fnon-call-exceptions -Wno-non-virtual-dtor -Wno-deprecated -Wno-write-strings ")
ELSE(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
    SET(CMAKE_CXX_FLAGS " -g -O0 -march=i686 -m32 -pthread -fexceptions -fno-strict-aliasing -W -Wall -Wno-parentheses -Wno-unused-parameter -fnon-call-exceptions -Wno-non-virtual-dtor -Wno-deprecated -Wno-write-strings ")
ENDIF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
ELSE(CMAKE_BUILD_TYPE MATCHES Debug)
    ADD_DEFINITIONS(-DNDEBUG)
IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
    SET(CMAKE_CXX_FLAGS " -g -O3 -march=nocona -m128bit-long-double -m64 -pthread -fexceptions -fno-strict-aliasing -W -Wall -Wno-parentheses -Wno-unused-parameter -fnon-call-exceptions -Wno-non-virtual-dtor -Wno-deprecated -Wno-write-strings ")
ELSE(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
    SET(CMAKE_CXX_FLAGS " -g -O3 -march=i686 -m32 -pthread -fexceptions -fno-strict-aliasing -W -Wall -Wno-parentheses -Wno-unused-parameter -fnon-call-exceptions -Wno-non-virtual-dtor -Wno-deprecated -Wno-write-strings ")
ENDIF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
ENDIF(CMAKE_BUILD_TYPE MATCHES Debug)
ENDIF(${CPUTYPE} MATCHES "x86")
IF(${CPUTYPE} MATCHES "arm")
        ADD_DEFINITIONS(-D_LSBF)
IF(CMAKE_BUILD_TYPE MATCHES Debug)
        ADD_DEFINITIONS(-DDEBUG)
        ADD_DEFINITIONS(-D_DEBUG)
        SET( CMAKE_CXX_FLAGS  "-g -O0 -mcpu=cortex-a9 -marm -pthread -fexceptions -fno-strict-aliasing -W -Wall -Wno-parentheses -Wno-unused-parameter -fnon-call-exceptions -Wno-non-virtual-dtor -Wno-deprecated -Wno-write-strings ")
ELSE(CMAKE_BUILD_TYPE MATCHES Debug)
        ADD_DEFINITIONS(-DNDEBUG)
        SET( CMAKE_CXX_FLAGS  "-g -O3 -mcpu=cortex-a9 -marm -pthread -fexceptions -fno-strict-aliasing -W -Wall -Wno-parentheses -Wno-unused-parameter -fnon-call-exceptions -Wno-non-virtual-dtor -Wno-deprecated -Wno-write-strings ")
ENDIF(CMAKE_BUILD_TYPE MATCHES Debug)
ENDIF(${CPUTYPE} MATCHES "arm")
ENDIF(CMAKE_SYSTEM_NAME MATCHES Linux)

IF(CMAKE_SYSTEM_NAME MATCHES Darwin)
    ADD_DEFINITIONS(-D_LINUX)
    ADD_DEFINITIONS(-DPOSIX)
    ADD_DEFINITIONS(-DDarwin)
    ADD_DEFINITIONS(-DIA32)
    ADD_DEFINITIONS(-DDEBUG)
    ADD_DEFINITIONS(-D_DEBUG)
    SET(CMAKE_CXX_FLAGS "-m64  -g -O0 -pthread -fexceptions -fno-strict-aliasing -W -Wall -Wno-unused-parameter -fnon-call-exceptions -Wno-non-virtual-dtor ")
ENDIF(CMAKE_SYSTEM_NAME MATCHES Darwin)

FILE(GLOB XMLSERVICE_SRCS_H "*.h")
FILE(GLOB XMLSERVICE_SRCS "*.cpp")
FILE(GLOB XMLSERVICE_SRCS_C "*.c")

link_directories(${MVSTORE_PRJ}/lib ${PROJECT_SOURCE_DIR}/lib)
add_library(${XMLSERVICE_TARGET_NAME} SHARED ${XMLSERVICE_SRCS_H} ${XMLSERVICE_SRCS} ${XMLSERVICE_SRCS_C})
SET_TARGET_PROPERTIES(${XMLSERVICE_TARGET_NAME} PROPERTIES LINKER_LANGUAGE CXX)

IF(CMAKE_SYSTEM_NAME MATCHES Linux)
    target_link_libraries (${XMLSERVICE_TARGET_NAME} affinity rt dl pthread expat)
ENDIF(CMAKE_SYSTEM_NAME MATCHES Linux)

IF(CMAKE_SYSTEM_NAME MATCHES Darwin)
    target_link_libraries (${XMLSERVICE_TARGET_NAME} affinity expat)
ENDIF(CMAKE_SYSTEM_NAME MATCHES Darwin)

IF(CMAKE_SYSTEM_NAME MATCHES Windows)
    target_link_libraries (${XMLSERVICE_TARGET_NAME} affinity expat)
ENDIF(CMAKE_SYSTEM_NAME MATCHES Windows)
